// NUMBERS

/*
–ó–ê–î–ê–ù–ò–ï ‚Ññ1

–í –∫–æ–¥–µ –µ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ a –∏ b.

–¢–≤–æ—è –∑–∞–¥–∞—á–∞: –æ–±—ä—è–≤–∏ 2 –Ω–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:

exp –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤–æ–∑–≤–µ–¥–µ–Ω–∏—è a –≤ —Å—Ç–µ–ø–µ–Ω—å b;
mod –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è a –Ω–∞ b.

–û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ: –Ω–µ –∏–∑–º–µ–Ω—è–π –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö a –∏ b –∏ –Ω–µ —É–¥–∞–ª—è–π –∏—Ö.
–†–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–≤–µ–¥–∏ –≤ console.log().

–ü–æ–¥—Å–∫–∞–∑–∫–∞:
–î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π –∏—Å–ø–æ–ª—å–∑—É–π –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã ** –∏ %.
*/

const a = 7;
const b = 2;
// –ú–µ–Ω—è—Ç—å –∫–æ–¥ –Ω–∏–∂–µ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏
let exp = a**b;
let mod = a % b;
console.log(exp); /*–í—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å—é–¥–∞ –∏ –ø–æ—Å–º–æ—Ä–∏ –≤ –≤–∫–ª–∞–¥–∫–µ console –≤ Dev Tools*/
console.log(mod); /*–í—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å—é–¥–∞ –∏ –ø–æ—Å–º–æ—Ä–∏ –≤ –≤–∫–ª–∞–¥–∫–µ console –≤ Dev Tools*/

/*
–ó–ê–î–ê–ù–ò–ï ‚Ññ2

–¢–µ–ø–µ—Ä—å –ø–æ—Ä–∞–±–æ—Ç–∞–µ–º —Å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–æ–º –≤—ã—á–∏—Å–ª–µ–Ω–∏–π.

–í –Ω–∞—à–µ–º –ø—Ä–∏–º–µ—Ä–µ —Ä–∞—Å—Å—Ç–∞–≤—å —Å–∫–æ–±–∫–∏ —Ç–∞–∫, —á—Ç–æ–±—ã –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è expression –±—ã–ª–∞ —Ä–∞–≤–Ω–∞ 10.

–û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ: —Ç–µ–±–µ –Ω–µ –Ω—É–∂–Ω–æ –æ–±—ä—è–≤–ª—è—Ç—å –Ω–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é. –†–∞—Å—Å—Ç–∞–≤—å —Å–∫–æ–±–∫–∏ –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º –≤—ã—Ä–∞–∂–µ–Ω–∏–∏.
*/

// –ú–µ–Ω—è—Ç—å –∫–æ–¥ –Ω–∏–∂–µ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏
const expression = 10 * (7 + 8 - 11) / 4;

console.log(expression); /*–í—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å—é–¥–∞ –∏ –ø–æ—Å–º–æ—Ä–∏ –≤ –≤–∫–ª–∞–¥–∫–µ console –≤ Dev Tools*/


/*
–ó–ê–î–ê–ù–ò–ï ‚Ññ3

–í –∫–æ–¥–µ –µ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ x –∏ y. –¢–≤–æ—è –∑–∞–¥–∞—á–∞: –æ–±—ä—è–≤–∏ 4 –Ω–æ–≤—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ:

addition –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—É–º–º—É x –∏ y;
subtraction –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã—á–∏—Ç–∞–Ω–∏—è x –∏ y;
division –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–µ–ª–µ–Ω–∏—è x –Ω–∞ y;
multiplication –¥–æ–ª–∂–Ω–∞ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ x –∏ y.
–û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ: –Ω–µ –∏–∑–º–µ–Ω—è–π –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö x –∏ y –∏ –Ω–µ —É–¥–∞–ª—è–π –∏—Ö.
–í—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ console.log().
*/
const x = 10;
const y = 2;

// –ú–µ–Ω—è—Ç—å –∫–æ–¥ –Ω–∏–∂–µ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏
let addition = x + y;
let subtraction = x - y;
let division = x / y;
let multiplication = x * y;
console.log(addition);
console.log(subtraction);
console.log(division);
console.log(multiplication);


// STRINGS
/*
–ó–ê–î–ê–ù–ò–ï ‚Ññ4

–ê —Ç–µ–ø–µ—Ä—å –ø—Ä–∏–º–µ–Ω–∏–º –∫–æ–Ω–∫–∞—Ç–µ–Ω–∞—Ü–∏—é ‚Äî ¬´—Å–∫–ª–µ–∏–≤–∞–Ω–∏–µ¬ª —Å—Ç—Ä–æ–∫ —Å –ø–æ–º–æ—â—å—é +.

–û–±—ä—è–≤–∏ –Ω–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é resultString. –ï–µ –∑–Ω–∞—á–µ–Ω–∏–µ ¬´—Å–∫–ª–µ–π¬ª –∏–∑ —É–∂–µ –æ–±—ä—è–≤–ª–µ–Ω–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö q, w –∏ e,
—á—Ç–æ–±—ã –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –ø–æ–ª—É—á–∏–ª–∞—Å—å —Å—Ç—Ä–æ–∫–∞ 'Concatenation'.

–í—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —ç–∫—Ä–∞–Ω —Å –ø–æ–º–æ—â—å—é console.log.
*/

const q = 'Con';
const w = 'catenat';
const e = 'ion';

// –ú–µ–Ω—è—Ç—å –∫–æ–¥ –Ω–∏–∂–µ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏
let resultString = q + w + e;
console.log(resultString);
/*–ó–ê–î–ê–ù–ò–ï ‚Ññ5

–ê —Ç–µ–ø–µ—Ä—å –≤–æ—Å–ø–æ–ª—å–∑—É–µ–º—Å—è –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏–µ–π ‚Äî –≤—Å—Ç–∞–≤–∫–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –≤ —Å—Ç—Ä–æ–∫—É –≤ –æ–±—Ä–∞—Ç–Ω—ã—Ö –∫–∞–≤—ã—á–∫–∞—Ö.

–û–±—ä—è–≤–∏ –Ω–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é resultString. –ß—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å –µ–π –∑–Ω–∞—á–µ–Ω–∏–µ, –∏—Å–ø–æ–ª—å–∑—É–π —É–∂–µ –æ–±—ä—è–≤–ª–µ–Ω–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ n –∏ m,
–∞ —Ç–∞–∫–∂–µ –æ–±—Ä–∞—Ç–Ω—ã–µ –∫–∞–≤—ã—á–∫–∏ (``). –í —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –¥–æ–ª–∂–Ω–∞ –ø–æ–ª—É—á–∏—Ç—å—Å—è —Å—Ç—Ä–æ–∫–∞:
Hello, world!

–û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ–±–µ–ª, –∑–∞–ø—è—Ç—É—é –∏ –≤–æ—Å–∫–ª–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π –∑–Ω–∞–∫, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ.

–í—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —ç–∫—Ä–∞–Ω —Å –ø–æ–º–æ—â—å—é console.log.
*/

const n = 'Hello';
const m = 'world';

// –ú–µ–Ω—è—Ç—å –∫–æ–¥ –Ω–∏–∂–µ —ç—Ç–æ–π —Å—Ç—Ä–æ–∫–∏
resultString = `${n}`+ `${m}!`;

console.log(resultString)
// BOOLEAN

/*
–ó–ê–î–ê–ù–ò–ï ‚Ññ6

–í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ª–æ–≥–∏—á–µ—Å–∫–∏–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º OR.

–¢–µ–±–µ –¥–∞–Ω –∫–æ–¥ —Å –æ–±—ä—è–≤–ª–µ–Ω–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏. –ò–∑–º–µ–Ω–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –æ–¥–Ω–æ–π –∏–∑ –Ω–∏—Ö (isHoliday –∏–ª–∏ isVacation),
—á—Ç–æ–±—ã canStayHome –ø–æ–ª—É—á–∏–ª–∞ –∑–Ω–∞—á–µ–Ω–∏–µ true.

–í—ã–≤–µ–¥–∏ canStayHome –≤ –∫–æ–Ω—Å–æ–ª—å.
*/

const isHoliday = true;
const isVacation = false;

const canStayHome = isHoliday || isVacation; // –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ: —ç—Ç—É —Å—Ç—Ä–æ–∫—É –∫–æ–¥–∞ –∏–∑–º–µ–Ω—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.
console.log(canStayHome)

/*
–ó–ê–î–ê–ù–ò–ï ‚Ññ7

–í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Ç—ã –Ω–∞—É—á–∏—à—å—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å —Å –ª–æ–≥–∏—á–µ—Å–∫–∏–º –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º AND.

–¢–µ–±–µ –¥–∞–Ω –∫–æ–¥ —Å –æ–±—ä—è–≤–ª–µ–Ω–Ω—ã–º–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏. –ò–∑–º–µ–Ω–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –æ–¥–Ω–æ–π –∏–∑ –Ω–∏—Ö (isWaterHot –∏–ª–∏ haveTea),
—á—Ç–æ–±—ã canMakeTea –ø–æ–ª—É—á–∏–ª–∞ –∑–Ω–∞—á–µ–Ω–∏–µ false.

–í—ã–≤–µ–¥–∏ canMakeTea –≤ –∫–æ–Ω—Å–æ–ª—å.
*/

const isWaterHot = true;
const haveTea = false;

const canMakeTea = isWaterHot && haveTea; // –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ: —ç—Ç—É —Å—Ç—Ä–æ–∫—É –∫–æ–¥–∞ –∏–∑–º–µ–Ω—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.
console.log(canMakeTea)
/*
–ó–ê–î–ê–ù–ò–ï ‚Ññ8

–ê —Ç–µ–ø–µ—Ä—å –∏–∑–º–µ–Ω–∏ –∑–Ω–∞—á–µ–Ω–∏—è –∫–æ–Ω—Å—Ç–∞–Ω—Ç —Ç–∞–∫, —á—Ç–æ–±—ã canMakeCake –ø–æ–ª—É—á–∏–ª–∞ –∑–Ω–∞—á–µ–Ω–∏–µ true,
–∏ –º—ã –º–æ–≥–ª–∏ –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—é —Ç–æ—Ä—Ç–∞.
*/

const hasEggs = true;
const hasFlour = true;
const hasSugar = true;

const canMakeCake = hasEggs && hasFlour && hasSugar; // –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ: —ç—Ç—É —Å—Ç—Ä–æ–∫—É –∫–æ–¥–∞ –∏–∑–º–µ–Ω—è—Ç—å –Ω–µ –Ω—É–∂–Ω–æ.

console.log(canMakeCake)
/*
let cities = ['Kyiv', 'London', 'Paris', 'Tokyo', 'New York'];
for (let index = cities.length-1; index >= 0; index--) {
    console.log(cities[index])
}
*/


// FUNCTIONS

/*
–ó–ê–î–ê–ù–ò–ï ‚Ññ9

–ê —Ç–µ–ø–µ—Ä—å —Å–æ–∑–¥–∞–π —Ñ—É–Ω–∫—Ü–∏—é greeter, –∫–æ—Ç–æ—Ä–∞—è:

–ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä name;
–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É-–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –≤ –≤–∏–¥–µ Hi, ${name}! (–∏—Å–ø–æ–ª—å–∑—É–π –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ return).
–í—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —ç–∫—Ä–∞–Ω —Å –ø–æ–º–æ—â—å—é console.log.

–ù–∞–ø—Ä–∏–º–µ—Ä:
// –ø–∞—Ä–∞–º–µ—Ç—Ä: name = 'Anna'
greeter('Anna'); // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 'Hi, Anna!'
*/
function greeter(name) {
    return `Hi, ${name}!`;
}

console.log(greeter('Lee'));

/*
–ó–ê–î–ê–ù–ò–ï ‚Ññ10

–£–ª—É—á—à–∏–º —Ñ—É–Ω–∫—Ü–∏—é greeter üòé.

–¢–µ–ø–µ—Ä—å –æ–Ω–∞ –¥–æ–ª–∂–Ω–∞ –ø—Ä–∏–Ω–∏–º–∞—Ç—å 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞: name –∏ partOfTheDay, –∏ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å —Å—Ç—Ä–æ–∫—É-–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ, –∫–∞–∫ –≤ –ø—Ä–∏–º–µ—Ä–µ:

greeter('Paul', 'night'); // 'Good night, Paul!'
greeter('John', 'day'); // 'Good day, John!'
greeter('Alex', 'morning'); // 'Good morning, Alex!'

–í—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —ç–∫—Ä–∞–Ω —Å –ø–æ–º–æ—â—å—é console.log.

–ü–æ–¥—Å–∫–∞–∑–∫–∞:
–¢—ã –º–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏—é, –∑–∞–ø–∏—Å–∞–≤ —Å—Ç—Ä–æ–∫—É
Good ${partOfTheDay}, ${name}!
–≤ –æ–±—Ä–∞—Ç–Ω—ã—Ö –∫–∞–≤—ã—á–∫–∞—Ö.
*/
function greeter2(partOfTheDay, name) {
    return `Good ${partOfTheDay}, ${name}!`;}


console.log(greeter2('night',"Alex"))


/*
–ó–ê–î–ê–ù–ò–ï ‚Ññ11

–í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Å–æ–∑–¥–∞–π —Ñ—É–Ω–∫—Ü–∏—é double, –∫–æ—Ç–æ—Ä–∞—è:

–ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä num;
–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ num, —É–º–Ω–æ–∂–µ–Ω–Ω–æ–µ –Ω–∞ 2.
–ù–∞–ø—Ä–∏–º–µ—Ä:

// –ø–∞—Ä–∞–º–µ—Ç—Ä: num = 5
double(5); // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 10

// –ø–∞—Ä–∞–º–µ—Ç—Ä: num = 24
double(24); // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç 48

–í—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —ç–∫—Ä–∞–Ω —Å –ø–æ–º–æ—â—å—é console.log.
*/
function double(num) {
    return num*2;
}
console.log(double(24))
// Conditional operators

/*
–ó–ê–î–ê–ù–ò–ï ‚Ññ12

–ê —Ç–µ–ø–µ—Ä—å –ø–æ—Ä–∞–±–æ—Ç–∞–µ–º —Å —É—Å–ª–æ–≤–Ω—ã–º–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏.

–ü–æ –∑–∞–∫–æ–Ω—É —Ç–æ–ª—å–∫–æ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–Ω–∏–µ –º–æ–≥—É—Ç –µ–∑–¥–∏—Ç—å –Ω–∞ –º–∞—à–∏–Ω–µ.

–°–æ–∑–¥–∞–π —Ñ—É–Ω–∫—Ü–∏—é canDrive, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ age:

–µ—Å–ª–∏ age –±–æ–ª—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–æ 18, —Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—ë—Ç —Å—Ç—Ä–æ–∫—É 'You can drive a car';
–≤ –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—ë—Ç —Å—Ç—Ä–æ–∫—É 'You can not drive a car'.
–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å –Ω—É–∂–Ω—É—é —Å—Ç—Ä–æ–∫—É –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏, –∏—Å–ø–æ–ª—å–∑—É–π –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ return.
–í—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —ç–∫—Ä–∞–Ω —Å –ø–æ–º–æ—â—å—é console.log.

–ù–∞–ø—Ä–∏–º–µ—Ä:
canDrive(17); // –≤–µ—Ä–Ω—ë—Ç 'You can not drive a car'
canDrive(18); // –≤–µ—Ä–Ω—ë—Ç 'You can drive a car'
canDrive(50); // –≤–µ—Ä–Ω—ë—Ç 'You can drive a car'
*/
let age = 18
if (age < 18) {
    console.log("You can not drive a car");
} else if (age === 18) {
    console.log('You can drive a car')
}

else { console.log('You can drive a car')}

/*
–ó–ê–î–ê–ù–ò–ï ‚Ññ13

–í—Å–µ –æ—Ñ–∏—Ü–∏–∞–Ω—Ç—ã –ª—é–±—è—Ç —á–∞–µ–≤—ã–µ! –ê –æ–¥–∏–Ω –∏–∑ –Ω–∏—Ö –ø–æ–¥–µ–ª–∏–ª—Å—è —Å –Ω–∞–º–∏ —Å–µ–∫—Ä–µ—Ç–Ω—ã–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º.

–†–µ–∞–ª–∏–∑—É–π —Ñ—É–Ω–∫—Ü–∏—é getTipsRating, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—É–º–º—É —á–∞–µ–≤—ã—Ö amount –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É-–æ—Ü–µ–Ω–∫—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π —Å—É–º–º—ã:

'terrible', –µ—Å–ª–∏ amount —Ä–∞–≤–Ω–æ 0 –≥—Ä–Ω;
'poor', –µ—Å–ª–∏ amount –æ—Ç 1 –¥–æ 10 –≥—Ä–Ω –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ;
'good', –µ—Å–ª–∏ amount –æ—Ç 11 –¥–æ 20 –≥—Ä–Ω –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ;
'great', –µ—Å–ª–∏ amount –æ—Ç 21 –¥–æ 50 –≥—Ä–Ω –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ;
'excellent', –µ—Å–ª–∏ amount –±–æ–ª—å—à–µ 50 –≥—Ä–Ω.

getTipsRating(0); // 'terrible'
getTipsRating(1); // 'poor'
getTipsRating(10); // 'poor'

–ù–∞–ø—Ä–∏–º–µ—Ä:
*/

function getTipsRating(amount){
    if (amount === 0) {
        return 'terrible';
    }

    else if (amount <= 10) {
        return 'poor';
// –¥–æ–±–∞–≤—å –æ—Å—Ç–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –∏ –≤—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —ç–∫—Ä–∞–Ω —Å –ø–æ–º–æ—â—å—é console.log.

    } else if (amount <= 20) {
        return 'good';
    } else if  (amount <= 50) {
        return 'great';
    } else if (amount > 50) {
        return 'excellent';
    
    }}
   
    console.log(getTipsRating(2));
console.log(getTipsRating(15));
console.log(getTipsRating(30));
console.log(getTipsRating(60));
    


/*
–ó–ê–î–ê–ù–ò–ï ‚Ññ14

–ü—Ä–æ–¥–æ–ª–∂–∏–º —Ä–∞–±–æ—Ç–∞—Ç—å —Å —É—Å–ª–æ–≤–Ω—ã–º–∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞–º–∏.

–ù–∏–∫—Ç–æ –Ω–µ –ª—é–±–∏—Ç –ø–ª–∞—Ç–∏—Ç—å –Ω–∞–ª–æ–≥–∏, –Ω–æ –º—ã –≤—Å–µ –æ–±—è–∑–∞–Ω—ã!

–°–æ–∑–¥–∞–π —Ñ—É–Ω–∫—Ü–∏—é calculateTaxes, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ income (—Ç–≤–æ–π –¥–æ—Ö–æ–¥) –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞–ª–æ–≥, –∫–æ—Ç–æ—Ä—ã–π —Ç—ã –∑–∞–ø–ª–∞—Ç–∏—à—å. –°—É–º–º–∞ –Ω–∞–ª–æ–≥–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–≤–æ–µ–≥–æ –¥–æ—Ö–æ–¥–∞:

–¥–æ 1000 –≥—Ä–Ω –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ ‚Äî –Ω–∞–ª–æ–≥ 2% –æ—Ç –¥–æ—Ö–æ–¥–∞;
–æ—Ç 1001 –≥—Ä–Ω –¥–æ 10000 –≥—Ä–Ω –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ ‚Äî –Ω–∞–ª–æ–≥ 3% –æ—Ç –¥–æ—Ö–æ–¥–∞;
–±–æ–ª—å—à–µ 10000 –≥—Ä–Ω ‚Äî –Ω–∞–ª–æ–≥ 5% –æ—Ç –¥–æ—Ö–æ–¥–∞.

–ù–∞–ø—Ä–∏–º–µ—Ä:
calculateTaxes(900); // 18 (900 * 0.02), —Ç–∞–∫ –∫–∞–∫ 900 < 1000
calculateTaxes(5000); // 150 (5000 * 0.03), —Ç–∞–∫ –∫–∞–∫ 5000 < 10000 –∏ 5000 > 1001
calculateTaxes(10500); // 525 (10500 * 0.05), —Ç–∞–∫ –∫–∞–∫ 10500 > 10000

–í—ã–≤–µ–¥–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –Ω–∞ —ç–∫—Ä–∞–Ω —Å –ø–æ–º–æ—â—å—é console.log.
*/
function calculateTaxes(income) {
    if (income <= 1000) {
        return income*0.02
    } else if (income <= 10000) {
        return income*0.03
    } else if (income > 10000) {
        return income*0.05
    }}

    console.log(calculateTaxes(250))
    console.log(calculateTaxes(252000))
    console.log(calculateTaxes(15000))
/*
–ó–ê–î–ê–ù–ò–ï ‚Ññ15

–í —ç—Ç–æ–º –∑–∞–¥–∞–Ω–∏–∏ —Å–æ–∑–¥–∞–π —Ñ—É–Ω–∫—Ü–∏—é getLargestExpressionResult, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç 2 —á–∏—Å–ª–∞: a –∏ b. –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ —Å—Ä–∞–≤–Ω–∏—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–ª–µ–¥—É—é—â–∏—Ö –≤—ã—á–∏—Å–ª–µ–Ω–∏–π –∏ –≤–µ—Ä–Ω—É—Ç—å –Ω–∞–∏–±–æ–ª—å—à–∏–π –∏–∑ –Ω–∏—Ö:

a + b
a - b
a * b
a / b

–û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ:
—á–∏—Å–ª–∞ a –∏ b –º–æ–≥—É—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º–∏;
–Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π —Ç–µ—Ä–Ω–∞—Ä–Ω—ã–π –æ–ø–µ—Ä–∞—Ç–æ—Ä –∏–ª–∏ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ else.
–ù–∞–ø—Ä–∏–º–µ—Ä, –µ—Å–ª–∏ a = 10 –∏ b = 5, —Ç–æ:

a + b = 15
a - b = 5
a * b = 50 ‚Äî –Ω–∞–∏–±–æ–ª—å—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
a / b = 2
–ù–æ –µ—Å–ª–∏ a = 10 –∏ b = -5, —Ç–æ:

a + b = 5
a - b = 15 ‚Äî –Ω–∞–∏–±–æ–ª—å—à–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
a * b = -50
a / b = -2

getLargestExpressionResult(10, 5); // 50
getLargestExpressionResult(10, -5); // 15

–ü–æ–¥—Å–∫–∞–∑–∫–∞:
–°–æ–∑–¥–∞–π –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é result –∏ –ø—Ä–∏—Å–≤–æ–π –µ–π –∑–Ω–∞—á–µ–Ω–∏–µ a + b.
–ü—Ä–æ–≤–µ—Ä—å, –±–æ–ª—å—à–µ –ª–∏ a - b, —á–µ–º result. –ï—Å–ª–∏ –¥–∞, —Ç–æ –ø—Ä–∏—Å–≤–æ–π result –∑–Ω–∞—á–µ–Ω–∏–µ a - b.
–°–æ–∑–¥–∞–π –∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–ª—è a * b –∏ a / b.
–ü–æ—Å–ª–µ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ –≤–µ—Ä–Ω–∏ result ‚Äî –æ–Ω –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–∞–∏–±–æ–ª—å—à–∏–π –≤–æ–∑–º–æ–∂–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å—Ä–µ–¥–∏ –≤—ã—Ä–∞–∂–µ–Ω–∏–π.
*/
function getLargestExpressionResult(a,b) {
    let result = a + b ;
    if (a - b > result ){
        result = a - b;
    } 
    if (a * b > result){
        result = a * b;
    } if (a / b > result) {
        result = a / b;
    } return result ;
} 
console.log(getLargestExpressionResult(20,4))